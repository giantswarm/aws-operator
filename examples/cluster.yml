apiVersion: "cluster.giantswarm.io/v1"
kind: Aws
metadata:
  name: example-cluster
spec:
  cluster:
    cluster:
      id: "example-cluster"

    customer:
      id: "example-customer"

    docker:
      imageNamespace: "giantswarm"

    etcd:
      domain: "etcd.example.aws.giantswarm.io"
      prefix: "example-cluster"
      port: 2379

    calico:
      subnet: "192.168.0.0"
      cidr: 24
      mtu: 1500

    kubernetes:
      api:
        domain: "api.example.aws.giantswarm.io"
        insecurePort: 8080
        ip: "172.31.0.1" 
        securePort: 443
        clusterIPRange: "172.31.0.0/24"
      dns:
        ip: "172.31.0.10"
      domain: "cluster.local"
      hyperkube:
        docker:
          image: "quay.io/giantswarm/hyperkube:v1.6.4_coreos.0"
      ingressController:
        docker:
          image: "quay.io/giantswarm/nginx-ingress-controller:0.9.0-beta.1"
        insecurePort: 30010
        securePort: 30011
        domain: "ingress.example.aws.gigantic.io"
        wildcardDomain: "*.example.aws.gigantic.io"
      kubelet:
        port: 10250
      networkSetup:
        docker:
          image: "giantswarm/k8s-setup-network-environment:ba2b57155d859a1fc5d378c2a09a77d7c2c755ed"

    masters:
    - hostname: "master-1"

    workers:
    - hostname: "worker-1"

  aws:
    region: "eu-central-1"
    az: "eu-central-1a"
    hostedZones:
      api: "HOSTED-ZONE-ID"
      etcd: "HOSTED-ZONE-ID"
      ingress: "HOSTED-ZONE-ID"
    vpc:
      cidr: "10.0.0.0/16"
      privateSubnetCidr: "10.0.0.0/19"
      publicSubnetCidr: "10.0.128.0/20"

    masters:
    - imageid: "ami-d60ad6b9"
      instancetype: "t2.medium"

    workers:
    - imageid: "ami-d60ad6b9"
      instancetype: "t2.medium"
