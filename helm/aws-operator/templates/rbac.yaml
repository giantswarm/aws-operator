apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "resource.default.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
rules:
  # The aws-operator needs read access to the legacy AWSConfig CRs in order to
  # do proper IPAM subnet allocation.
  - apiGroups:
      - provider.giantswarm.io
    resources:
      - awsconfigs
    verbs:
      - list

  # The aws-operator needs read access to our Release CRs in order to fetch and
  # further propagate certain version information.
  - apiGroups:
      - release.giantswarm.io
    resources:
      - releases
    verbs:
      - get

  # The aws-operator needs read and write access to the CAPI Cluster CR in order
  # to set the API endpoint in its status.
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
    verbs:
      - get
      - list
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters/status
    verbs:
      - update

  # The aws-operator needs read and write access to all AWS specific
  # infrastructure CRs we manage for Tenant Clusters.
  - apiGroups:
      - infrastructure.giantswarm.io
    resources:
      - awsclusters
      - awsclusters/status
      - awscontrolplanes
      - awscontrolplanes/status
      - awsmachinedeployments
      - awsmachinedeployments/status
      - g8scontrolplanes
      - g8scontrolplanes/status
    verbs:
      - "*"

  # The aws-operator needs read and write access to the DrainerConfig CRs in
  # order to initialize and finalize node draining. DrainerConfig CRs are
  # created, listed and deleted once draining is done or timed out.
  - apiGroups:
      - core.giantswarm.io
    resources:
      - drainerconfigs
    verbs:
      - "*"

  # The aws-operator uses a distributed locking mechanism called kubelock. It
  # operates based on namespaces in order to achieve a distributed locking
  # mechanism. The locking is used for IPAM subnet allocation.
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update

  # The aws-operator manages endpoints and services for Prometheus monitoring.
  # So it needs read and write access for these services in order to manage them
  # according to a Tenant Cluster's life cycle.
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - "*"

  # The aws-operator needs read access to secrets so that it can read
  # certificates which we inject into Cloud Config files. These Cloud Configs
  # get encrypted and uploaded to S3 in order to boot EC2 instances for the
  # Kubernetes nodes of a Tenant Cluster. The update capability is necessary for
  # the operator to add and remove finalizers from certain secrets associated
  # with certificates.
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - update
      - watch

  # The aws-operator needs read access for its own configmap since all
  # non-sensitive settings are propagated into the pod's process that way.
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - {{ include "resource.default.name"  . }}
    verbs:
      - get

  - nonResourceURLs:
      - "/"
      - "/healthz"
    verbs:
      - get

  # The aws-operator needs access for events to write those to the belonging objects.
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "resource.default.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "resource.default.name" . }}
    namespace: {{ include "resource.default.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ include "resource.default.name" . }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "resource.psp.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - {{ include  "resource.psp.name" . }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "resource.psp.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "resource.default.name" . }}
    namespace: {{ include "resource.default.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ include "resource.psp.name" . }}
  apiGroup: rbac.authorization.k8s.io
