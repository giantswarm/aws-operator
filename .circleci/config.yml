e2eTest: &e2eTest
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./e2e-harness

    - run: ./e2e-harness setup --name=ci-awsop-${CIRCLE_SHA1:0:7}

    - run:
        name: additional setup required for compiling go on circleCI
        command: |
          mkdir -p /home/circleci/.go_workspace/src
          cp -ar vendor/* /home/circleci/.go_workspace/src/
    - run:
        name: set CLUSTER_NAME env var
        command: echo 'export CLUSTER_NAME=ci-awsop-${CIRCLE_SHA1:0:7}' >> $BASH_ENV

    - run: ./e2e-harness test

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: ./e2e-harness teardown
        when: always

version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./architect
        ./architect version

    - run: ./architect build

    - deploy:
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi

  e2eTestPR:
    <<: *e2eTest

  e2eTestMaster:
    <<: *e2eTest

workflows:
  version: 2
  build_e2e:
    jobs:
      - build
      - hold:
          type: approval
          filters:
            branches:
              ignore: master
          requires:
          - build
      - e2eTestPR:
          requires:
          - hold
      - e2eTestMaster:
          filters:
            branches:
              only: master
          requires:
          - build
