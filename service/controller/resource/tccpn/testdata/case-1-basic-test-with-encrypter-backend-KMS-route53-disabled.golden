AWSTemplateFormatVersion: 2010-09-09
Description: Tenant Cluster Control Plane Nodes Cloud Formation Stack.
Outputs:
  InstanceType:
    Value: m5.xlarge
  MasterReplicas:
    Value: 1
  OperatorVersion:
    Value: 7.3.0
  ReleaseVersion:
    Value: 100.0.0
Resources:
  ControlPlaneNodeAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
    - MasterEni
    - EtcdVolume
    Properties:
      VPCZoneIdentifier:
        - subnet-id-eu-central-1b
      AvailabilityZones:
        - eu-central-1b
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref ControlPlaneNodeLaunchTemplate
            Version: !GetAtt ControlPlaneNodeLaunchTemplate.LatestVersionNumber
      LoadBalancerNames:
      - 8y5ck-api-internal
      - 8y5ck-api
      - 8y5ck-etcd
      # 60 seconds after a new node comes into service, the ASG checks the new
      # instance's health.
      HealthCheckGracePeriod: 60

      MetricsCollection:
        - Granularity: "1Minute"

      Tags:
        - Key: Name
          Value: 8y5ck-master
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:

        # Minimum amount of nodes that must always be running during a rolling
        # update.
        MinInstancesInService: 0

        # Maximum amount of nodes being rolled at the same time.
        MaxBatchSize: 1

        # We pause the roll of the master ASG for 2 mins to give master
        # time to properly join k8s cluster before rolling another one.
        PauseTime: PT2M
  MasterEni:
    Type: AWS::EC2::NetworkInterface
    Properties:
       Description: A Network interface used for etcd.
       GroupSet:
       - master-security-group-id
       SubnetId: subnet-id-eu-central-1b
       Tags:
       - Key: Name
         Value: 8y5ck-master0-eni
       - Key: node.k8s.amazonaws.com/no_manage
         Value: "true"
  EtcdVolume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: eu-central-1b
      Encrypted: true
      Size: 100
      SnapshotId: snap-1234567890abcdef0
      Tags:
      - Key: Name
        Value: 8y5ck-master0-etcd
      VolumeType: gp2
  ControlPlaneNodesRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gs-cluster-8y5ck-role-tccpn
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: ec2.amazonaws.com
          Action: "sts:AssumeRole"
  ControlPlaneNodesRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: gs-cluster-8y5ck-policy-tccpn
      Roles:
        - Ref: ControlPlaneNodesRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "ec2:*"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "s3:GetBucketLocation"
              - "s3:ListAllMyBuckets"
            Resource: "*"
          - Effect: "Allow"
            Action: "s3:ListBucket"
            Resource: "arn:aws:s3:::tenant-account-g8s-8y5ck"
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: "arn:aws:s3:::tenant-account-g8s-8y5ck/*"
          - Effect: "Allow"
            Action: "elasticloadbalancing:*"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "autoscaling:DescribeAutoScalingGroups"
              - "autoscaling:DescribeAutoScalingInstances"
              - "autoscaling:DescribeTags"
              - "autoscaling:DescribeLaunchConfigurations"
              - "ec2:DescribeLaunchTemplateVersions"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "autoscaling:SetDesiredCapacity"
              - "autoscaling:TerminateInstanceInAutoScalingGroup"
            Resource: "*"
            Condition:
              StringEquals:
                autoscaling:ResourceTag/giantswarm.io/cluster: "8y5ck"
          - Effect: "Allow"
            Action:
              - "ecr:GetAuthorizationToken"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:GetRepositoryPolicy"
              - "ecr:DescribeRepositories"
              - "ecr:ListImages"
              - "ecr:BatchGetImage"
            Resource: "*"
          # Following rules are required to make the AWS CNI work. See also
          # https://github.com/aws/amazon-vpc-cni-k8s#setup.
          - Effect: Allow
            Action:
              - ec2:AssignPrivateIpAddresses
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypes
              - ec2:DescribeTags
              - ec2:DescribeNetworkInterfaces
              - ec2:DetachNetworkInterface
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:UnassignPrivateIpAddresses
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:CreateTags
            Resource:
              - arn:aws:ec2:*:*:network-interface/*
  ControlPlaneNodesInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: gs-cluster-8y5ck-profile-tccpn
      Roles:
        - Ref: ControlPlaneNodesRole
  IAMManagerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: 8y5ck-IAMManager-Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            AWS: !GetAtt ControlPlaneNodesRole.Arn
          Action: "sts:AssumeRole"
  IAMManagerRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: 8y5ck-IAMManager-Policy
      Roles:
        - Ref: "IAMManagerRole"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Action: "sts:AssumeRole"
          Resource: "*"
  ControlPlaneNodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: 8y5ck-master0-launch-template
      LaunchTemplateData:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdc
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: 100
            VolumeType: gp2
        - DeviceName: /dev/xvdg
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: 100
            VolumeType: gp2
        - DeviceName: /dev/xvdf
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: 100
            VolumeType: gp2
        IamInstanceProfile:
          Name: !Ref ControlPlaneNodesInstanceProfile
        ImageId: ami-0a9a5d2b65cce04eb
        InstanceType: m5.xlarge
        Monitoring:
          Enabled: false
        NetworkInterfaces:
          - AssociatePublicIpAddress: false
            DeviceIndex: 0
            Groups:
            - master-security-group-id
        TagSpecifications:
        - ResourceType: instance
          Tags:
            - Key: giantswarm.io/release
              Value: 100.0.0
        UserData:
          Fn::Base64: |
            {
              "ignition": {
                "version": "2.2.0",
                "config": {
                  "append": [
                    {
                      "source": "s3://tenant-account-g8s-8y5ck/version/7.3.0/cloudconfig/v_6_1_0/cluster-8y5ck-tccpn-0"
                    }
                  ]
                }
              },
              "storage": {
                "filesystems": [
                  {
                    "name": "docker",
                    "mount": {
                      "device": "/dev/xvdc",
                      "wipeFilesystem": true,
                      "label": "docker",
                      "format": "xfs"
                    }
                  },
                  {
                    "name": "kubelet",
                    "mount": {
                      "device": "/dev/xvdg",
                      "wipeFilesystem": true,
                      "label": "kubelet",
                      "format": "xfs"
                    }
                  },
                  {
                    "name": "log",
                    "mount": {
                      "device": "/dev/xvdf",
                      "wipeFilesystem": true,
                      "label": "log",
                      "format": "xfs"
                    }
                  }
                ]
              }
            }
